@mixin center-transform($scale: 1) {
    transform: translate(-50%, -50%) scale($scale);
}

// Mixins for transitions (excluding transform, as it will be updated inline)
@mixin transition-base($properties...) {
    transition:
        opacity 0.15s ease-out,
        #{$properties};
}

.cursor-dot,
.cursor-ring {
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 9999;
    user-select: none;
    will-change: transform;
    // We don't define transform here because it is updated inline by the directive
    // @include transition-base(background-color 0.15s ease-out);
}

// Cursor dot (point)
.cursor-dot {
    width: 6px;
    height: 6px;
    background-color: var(--primary-color);
    border-radius: 50%;

    &.pointer {
        opacity: 0.5;
    }

    &.clicking {
        // Puedes personalizar la escala o el color
        opacity: 0.8;
    }

    &.selecting {
        opacity: 0.5;
    }
}

// Cursor ring (ring)
.cursor-ring {
    width: 30px;
    height: 30px;
    border: 1.5px solid var(--primary-color);
    border-radius: 50%;
    // Optional pulse animation
    animation: ringPulse 2s infinite;
}

// Improved animations
@keyframes dotHoverPulse {
    0% {
        @include center-transform(1.5);
        opacity: 1;
    }
    50% {
        @include center-transform(1.65);
        opacity: 0.8;
    }
    100% {
        @include center-transform(1.5);
        opacity: 1;
    }
}

// Additional animation keyframes (if desired)
@keyframes ringPulse {
    0% {
        opacity: 0.8;
    }
    50% {
        opacity: 0.5;
    }
    100% {
        opacity: 0.8;
    }
}

// Example of hover over interactive elements
:host-context(button:hover) .cursor-ring {
    border-color: var(--p-neutral-300);
    animation: none;
}

:host-context(a:hover) .cursor-ring {
    border-color: var(--primary-color);
    animation: none;
}

//  Media query for touch devices
@media (hover: none) {
    :host,
    .cursor-dot,
    .cursor-ring {
        display: none;
    }
}
